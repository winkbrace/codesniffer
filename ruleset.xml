<?xml version="1.0"?>
<ruleset name="WinkBrace">
 <description>The Wink Brace coding standard.</description>

 <!-- 2. General -->

 <!-- 2.1 Basic Coding Standard -->

 <!-- 2.2 Files -->

 <!-- All PHP files MUST end with a single blank line. -->
 <!-- checked in Files/EndFileNewlineSniff -->

 <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->
 <rule ref="Zend.Files.ClosingTag"/>

 <!-- 2.3 Lines -->

 <!-- The soft limit on line length MUST be 150 characters; automated style checkers MUST warn but MUST NOT error at the soft limit. -->
 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="180"/>
   <property name="absoluteLineLimit" value="0"/>
  </properties>
 </rule>

 <!-- There MUST NOT be more than one statement per line, except in FOR or SWITCH statements -->
 <!-- checked in Formatting.DisallowMultipleStatements -->

 <!-- 2.4 Indenting -->

 <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->
 <rule ref="Generic.WhiteSpace.ScopeIndent"/>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

 <!-- 2.5 Keywords and True/False/Null -->

 <!-- PHP keywords MUST be in lower case. -->
 <rule ref="Generic.PHP.LowerCaseKeyword"/>

 <!-- The PHP constants true, false, and null MUST be in lower case. -->
 <rule ref="Generic.PHP.LowerCaseConstant"/>

 <!-- 3. Namespace and Use Declarations -->

 <!-- When present, there MUST be one blank line after the namespace declaration. -->
 <!-- checked in Namespaces/NamespaceDeclarationSniff -->

 <!-- When present, all use declarations MUST go after the namespace declaration.
      There MUST be one use keyword per declaration.
      There MUST be one blank line after the use block. -->
 <!-- checked in Namespaces/UseDeclarationSniff -->

 <!-- 4. Classes, Properties, and Methods -->

 <!-- 4.1. Extends and Implements -->

 <!-- The extends and implements keywords MUST be declared on the same line as the class name.
      The opening brace for the class go MUST go on its own line; the closing brace for the class MUST go on the next line after the body.
      Lists of implements MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one interface per line. -->
 <!-- checked in Classes/ClassDeclarationSniff -->

 <!-- 4.2. Properties -->

 <!-- Visibility MUST be declared on all properties.
      The var keyword MUST NOT be used to declare a property.
      // Commented: There MUST NOT be more than one property declared per statement.
      Property names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
 <!-- checked in Classes/PropertyDeclarationSniff -->

 <!-- 4.3 Methods -->

 <!-- Visibility MUST be declared on all methods, except the magic methods. -->
 <!-- Method scope is checked in WinkBrace_Sniffs_Scope_MethodScopeSniff -->
 <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

 <!-- Method names SHOULD NOT be prefixed with a single underscore to indicate protected or private visibility. -->
 <!-- checked in Methods/MethodDeclarationSniff -->

 <!-- Method names MUST NOT be declared with a space after the method name.
      The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body.
      There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->
 <rule ref="Squiz.Functions.FunctionDeclaration"/>
 <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

 <!-- 4.3 Method Arguments -->

 <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
  <properties>
   <property name="equalsSpacing" value="1"/>
  </properties>
 </rule>

 <!-- Method arguments with default values MUST go at the end of the argument list. -->
 <rule ref="PEAR.Functions.ValidDefaultValue"/>

 <!-- 4.4. abstract, final, and static -->

 <!-- When present, the abstract and final declarations MUST precede the visibility declaration.
      When present, the static declaration MUST come after the visibility declaration. -->
 <!-- checked in Methods/MethodDeclarationSniff -->

 <!-- 4.5 Method and Function Calls -->

 <!-- When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis,
 there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis.
 In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.
 The opening bracket MUST start at the same column as the method or function start keyword
 Argument lists MAY be split across multiple lines, where each subsequent line is indented once.
 When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. -->
 <!-- checked in Functions.FunctionCallArgumentSpacing -->
 <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>

 <!-- 5. Control Structures -->

 <!-- The general style rules for control structures are as follows:
 There MUST be one space after the control structure keyword
 There MUST NOT be a space after the opening parenthesis
 There MUST NOT be a space before the closing parenthesis
 The structure body MUST be indented once
 The closing brace MUST be on the next line after the body -->
 <!-- checked in WhiteSpace.ScopeClosingBrace -->
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
 <!-- checked in ControlStructures/ControlStructureSpacingSniff -->

 <!-- 5.1. if, elseif, else -->

 <!-- The keyword elseif SHOULD be used instead of else if so that all control keywords look like single words. -->
 <!-- checked in ControlStructures/ElseIfDeclarationSniff -->

 <!-- 6. Closures -->

 <!-- Closures MUST be declared with a space after the function keyword, and a space before and after the use keyword.
 The opening brace MUST go on the same line, and the closing brace MUST go on the next line following the body.
 There MUST NOT be a space after the opening parenthesis of the argument list or variable list, and there MUST NOT be a space before the closing parenthesis of the argument list or variable list.
 In the argument list and variable list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.
 Closure arguments with default values MUST go at the end of the argument list.
 Argument lists and variable lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument or variable per line.
 When the ending list (whether or arguments or variables) is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->
 <!-- checked in Squiz.Functions.MultiLineFunctionDeclaration -->
 
 
 
 <!-- WinkBrace custom checks -->
 
 <!-- Variable names and Method names MUST be camelCase and MUST NOT start with underscore or capital letter -->
 <!-- checked in NamingConventions/ValidVariableNameSniff and Methods/NamingConventionSniff.php -->
 
 
 <!-- All operators MUST have a leading and trailing space -->
 <!-- checked in WhiteSpace/SpaceAroundOperatorsSniff -->
 
 <!-- The constructor MUST have 2 blank lines above -->
 <!-- checked in Methods/ConstructorSpacingSniff -->
 
 <!-- Every method MUST have a doc comment -->
 <!-- checked in Methods/MethodDocCommentSniff -->
 
</ruleset>
